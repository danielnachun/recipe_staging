# Package: ashr
# Encoding: UTF-8
# Type: Package
# Maintainer: Peter Carbonetto <pcarbo@uchicago.edu>
# Authors@R: c(person("Matthew","Stephens",role="aut", email="mstephens@uchicago.edu"), person("Peter","Carbonetto",role=c("aut","cre"), email="pcarbo@uchicago.edu"), person("Chaoxing","Dai",role="ctb"), person("David","Gerard",role="aut"), person("Mengyin","Lu",role="aut"), person("Lei","Sun",role="aut"), person("Jason","Willwerscheid",role="aut"), person("Nan","Xiao",role="aut"), person("Mazon","Zeng",role="ctb"))
# Version: 2.2-47
# Date: 2020-02-19
# Title: Methods for Adaptive Shrinkage, using Empirical Bayes
# Description: The R package 'ashr' implements an Empirical Bayes approach for large-scale hypothesis testing and false discovery rate (FDR) estimation based on the methods proposed in M. Stephens, 2016, "False discovery rates: a new deal", <DOI:10.1093/biostatistics/kxw041>. These methods can be applied whenever two sets of summary statistics---estimated effects and standard errors---are available, just as 'qvalue' can be applied to previously computed p-values. Two main interfaces are provided: ash(), which is more user-friendly; and ash.workhorse(), which has more options and is geared toward advanced users. The ash() and ash.workhorse() also provides a flexible modeling interface that can accommodate a variety of likelihoods (e.g., normal, Poisson) and mixture priors (e.g., uniform, normal).
# Depends: R (>= 3.1.0)
# Imports: Matrix, stats, graphics, Rcpp (>= 0.10.5), truncnorm, mixsqp, SQUAREM, etrunct, invgamma
# Suggests: testthat, knitr, rmarkdown, ggplot2, REBayes
# LinkingTo: Rcpp
# License: GPL (>= 3)
# NeedsCompilation: yes
# LazyData: true
# URL: https://github.com/stephens999/ashr
# BugReports: https://github.com/stephens999/ashr/issues
# RoxygenNote: 7.0.2
# VignetteBuilder: knitr
# Packaged: 2020-02-19 23:35:57 UTC; pcarbo
# Author: Matthew Stephens [aut], Peter Carbonetto [aut, cre], Chaoxing Dai [ctb], David Gerard [aut], Mengyin Lu [aut], Lei Sun [aut], Jason Willwerscheid [aut], Nan Xiao [aut], Mazon Zeng [ctb]
# Repository: CRAN
# Date/Publication: 2020-02-20 05:40:06 UTC
schema_version: 1

context:
  version: 2.2-63
  posix: "'m2-' if win else ''"
  native: "'m2w64-' if win else ''"

package:
  name: r-ashr
  version: ${{ version|replace("-", "_") }}

source:
  url:
    - ${{ cran_mirror }}/src/contrib/ashr_${{ version }}.tar.gz
    - ${{ cran_mirror }}/src/contrib/Archive/ashr/ashr_${{ version }}.tar.gz
  sha256: 7fa1957ed3cf0f1f20939b6ebf71fc04ab983ca77616f7b80ce9e9e6fad457c9

build:
  number: 0
  merge_build_and_host_envs: ${{ true if win }}
  dynamic_linking:
    rpaths:
      - lib/R/lib/
      - lib/

requirements:
  build:
    - if: not win
      then: ${{ compiler('c') }}
    - if: win
      then: ${{ compiler('m2w64_c') }}
    - if: not win
      then: ${{ compiler('cxx') }}
    - if: win
      then: ${{ compiler('m2w64_cxx') }}
    - if: win
      then: ${{ posix }}filesystem
    - ${{ posix }}make
    - if: win
      then: ${{ posix }}sed
    - if: win
      then: ${{ posix }}coreutils
    - if: win
      then: ${{ posix }}zip
    - if: build_platform != target_platform
      then: cross-r-base ${{ r_base }}
  host:
    - r-base=4.2
    - r-matrix
    - r-rcpp >=0.10.5
    - r-squarem
    - r-etrunct
    - r-invgamma
    - r-mixsqp
    - r-truncnorm
  run:
    - r-base>=4.2
    - if: win
      then: ${{ native }}gcc-libs
    - r-matrix
    - r-rcpp >=0.10.5
    - r-squarem
    - r-etrunct
    - r-invgamma
    - r-mixsqp
    - r-truncnorm

tests:
  - script:
      - if: not win
        then: "$R -e \"library('ashr')\""
      - if: win
        then: "\"%R%\" -e \"library('ashr')\""

about:
  license: GPL-3.0-or-later
  summary: "The R package 'ashr' implements an Empirical Bayes approach for large-scale hypothesis testing and false discovery rate (FDR) estimation based on the methods proposed in M. Stephens, 2016, \"False discovery rates: a new deal\", <DOI:10.1093/biostatistics/kxw041>. These methods can be applied whenever two sets::
    of summary statistics---estimated effects and standard errors---are available, just as 'qvalue' can be applied to previously computed p-values. Two main interfaces are provided: ash(), which is more user-friendly; and ash.workhorse(), which has more options and is geared toward advanced users. The ash() and ash.workhorse()
    - "also provides a flexible modeling interface that can accommodate a variety of likelihoods (e.g., normal, Poisson) and mixture priors (e.g., uniform, normal).\""
  license_file:
    - ${{ env.get("PREFIX") }}/lib/R/share/licenses/GPL-3
  homepage: https://github.com/stephens999/ashr

extra:
  recipe-maintainers:
    - conda-forge/r

