schema_version: 1

context:
  version: 5.1.1
  version_major: "\"version.split(\".\")[0]\""
  version_minor: "\"version.split(\".\")[1]\""

package:
  name: ocaml
  version: ${{ version }}

source:
  url: http://caml.inria.fr/pub/distrib/ocaml-${{ version_major }}.${{ version_minor }}/ocaml-${{ version }}.tar.gz
  sha256: 33b8c1df88700ba1f5123aa4bdbc7a125482feafc77e5081ef1725fddf290be1
  patches:
    - 0001-prefix-fix.patch

build:
  number: 0
  skip: win
  prefix_detection:
    ignore:
      - bin/ocaml
      - bin/ocamlcmt
      - bin/ocamlcp
      - bin/ocamldebug
      - bin/ocamldoc
      - bin/ocamlmklib
      - bin/ocamlmktop
      - bin/ocamloptp
      - bin/ocamlprof
      - bin/*.byte

requirements:
  build:
    - ${{ compiler('c') }}
    - if: linux
      then: sysroot_linux-64=2.17
    - if: unix
      then: make
    - if: win
      then: m2-make
    - if: win
      then: posix
  host:
    - zstd
  run:
    - ${{ compiler('c') }}
    - zstd
  run_exports:
    - ${{ pin_subpackage("ocaml", upper_bound="x.x.x") }}

tests:
  - script:
      - ocaml -version
      - ocamlc -version
      - ocamlcmt -help
      - ocamlcp -version
      - ocamldoc -version
      - ocamldebug -version
      - ocamldep -version
      - ocamllex -version
      - ocamlmklib -version
      - ocamlmktop -version
      - ocamlobjinfo -help
      - ocamlobjinfo.byte -help
      - ocamlobjinfo.opt -help
      - ocamlopt -version
      - ocamloptp -version
      - ocamlprof -version
      - ocamlrun -version
      - ocamlyacc -version

about:
  license: LGPL-2.1-only WITH OCaml-LGPL-linking-exception
  license_file: LICENSE
  summary: Objective Caml (OCaml) is an implementation of the ML language.
  description: |
    OCaml is an implementation of the ML language, based on the Caml Light
    dialect extended with a complete class-based object system and a powerful
    module system in the style of Standard ML.
    OCaml comprises two compilers. One generates bytecode which is then
    interpreted by a C program. This compiler runs quickly, generates compact
    code with moderate memory requirements, and is portable to essentially any
    32 or 64 bit Unix platform. Performance of generated programs is quite good
    for a bytecoded implementation.  This compiler can be used either as a
    standalone, batch-oriented compiler that produces standalone programs, or as
    an interactive, toplevel-based system.
    The other compiler generates high-performance native code for a number of
    processors. Compilation takes longer and generates bigger code, but the
    generated programs deliver excellent performance, while retaining the
    moderate memory requirements of the bytecode compiler.
  homepage: https://ocaml.org
  repository: https://github.com/ocaml/ocaml
  documentation: https://ocaml.org/docs

extra:
  recipe-maintainers:
    - peterjc
    - Zimmi48
    - isuruf
    - bollwyvl

