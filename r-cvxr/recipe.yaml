schema_version: 1

context:
  version: 1.0-12
  posix: "'m2-' if win else ''"
  native: "'m2w64-' if win else ''"

package:
  name: r-cvxr
  version: ${{ version|replace("-", "_") }}

source:
  url:
    - ${{ cran_mirror }}/src/contrib/CVXR_${{ version }}.tar.gz
    - ${{ cran_mirror }}/src/contrib/Archive/CVXR/CVXR_${{ version }}.tar.gz
  sha256: e76a876a9369a91249156f238d3df0d99d8e54120b4d55d83d11cf1c8688ffc5

build:
  number: 0
  merge_build_and_host_envs: ${{ true if win }}
  dynamic_linking:
    rpaths:
      - lib/R/lib/
      - lib/

requirements:
  build:
    - if: not win
      then: ${{ compiler('c') }}
    - if: win
      then: ${{ compiler('m2w64_c') }}
    - if: not win
      then: ${{ compiler('cxx') }}
    - if: win
      then: ${{ compiler('m2w64_cxx') }}
    - if: win
      then: ${{ posix }}filesystem
    - ${{ posix }}make
    - if: win
      then: ${{ posix }}sed
    - if: win
      then: ${{ posix }}coreutils
    - if: win
      then: ${{ posix }}zip
    - if: build_platform != target_platform
      then: cross-r-base ${{ r_base }}
  host:
    - r-base=4.2
    - r-ecosolver >=0.5.4
    - r-matrix
    - r-r6
    - r-rcpp >=0.12.12
    - r-rcppeigen
    - r-rmpfr
    - r-bit64
    - r-gmp
    - r-osqp
    - r-scs >=3.0
  run:
    - r-base>=4.2
    - if: win
      then: ${{ native }}gcc-libs
    - r-ecosolver >=0.5.4
    - r-matrix
    - r-r6
    - r-rcpp >=0.12.12
    - r-rcppeigen
    - r-rmpfr
    - r-bit64
    - r-gmp
    - r-osqp
    - r-scs >=3.0

tests:
  - script:
      - if: not win
        then: "$R -e \"library('CVXR')\""
      - if: win
        then: "\"%R%\" -e \"library('CVXR')\""

about:
  license: Apache-2.0
  summary: |
    An object-oriented modeling language for disciplined convex programming (DCP) as described in Fu, Narasimhan, and Boyd (2020, <doi:10.18637/jss.v094.i14>). It allows the user to formulate convex optimization problems in a natural way following mathematical convention and DCP rules. The system analyzes the problem,
    verifies its convexity, converts it into a canonical form, and hands it off to an appropriate solver to obtain the solution. Interfaces to solvers on CRAN and elsewhere are provided, both commercial and open source.
  license_file:
    - APACHE-2.0.txt
    - LICENSE
  homepage: https://cvxr.rbind.io, https://www.cvxgrp.org/CVXR/

extra:
  recipe-maintainers:
    - conda-forge/r

