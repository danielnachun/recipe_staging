schema_version: 1

context:
  version: 1.1.9
  posix: "'m2-' if win else ''"
  native: "'m2w64-' if win else ''"

package:
  name: r-arrangements
  version: ${{ version|replace("-", "_") }}

source:
  url:
    - ${{ cran_mirror }}/src/contrib/arrangements_${{ version }}.tar.gz
    - ${{ cran_mirror }}/src/contrib/Archive/arrangements/arrangements_${{ version }}.tar.gz
  sha256: e9b5dcb185ec9b28201b196384b04a8d5a15f4ddb9e0b0b2a0c718635ff7345b

build:
  number: 2
  merge_build_and_host_envs: ${{ true if win }}
  dynamic_linking:
    rpaths:
      - lib/R/lib/
      - lib/

requirements:
  build:
    - if: not win
      then: ${{ compiler('c') }}
    - if: win
      then: ${{ compiler('m2w64_c') }}
    - if: win
      then: ${{ posix }}filesystem
    - ${{ posix }}make
    - if: win
      then: ${{ posix }}sed
    - if: win
      then: ${{ posix }}coreutils
    - if: win
      then: ${{ posix }}zip
    - if: build_platform != target_platform
      then: cross-r-base ${{ r_base }}
  host:
    - ${{ native }}gmp
    - r-base=4.2
    - r-r6
    - r-gmp
  run:
    - ${{ native }}gmp >=5.0.1,<7
    - r-base>=4.2
    - if: win
      then: ${{ native }}gcc-libs
    - r-r6
    - r-gmp

tests:
  - script:
      - if: not win
        then: "$R -e \"library('arrangements')\""
      - if: win
        then: "\"%R%\" -e \"library('arrangements')\""

about:
  license: MIT
  summary: |
    Fast generators and iterators for permutations, combinations, integer partitions and
    compositions. The arrangements are in lexicographical order and generated iteratively
    in a memory efficient manner. It has been demonstrated that 'arrangements' outperforms
    most existing packages of similar kind. Benchmarks could be found at <https://randy3k.github.io/arrangements/articles/benchmark.html>.
  license_file:
    - ${{ env.get("PREFIX") }}/lib/R/share/licenses/MIT
    - LICENSE
  homepage: https://github.com/randy3k/arrangements

extra:
  recipe-maintainers:
    - izahn
    - conda-forge/r

