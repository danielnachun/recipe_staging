# Package: StanHeaders
# Date: 2020-01-11
# Title: C++ Header Files for Stan
# Authors@R: c(person("Ben",family="Goodrich", email="benjamin.goodrich@columbia.edu", role=c('cre','aut')), person("Joshua", "Pritikin", role = "ctb"), person("Andrew", "Gelman", role = "aut"), person("Bob", "Carpenter",  role = "aut"), person("Matt", "Hoffman", role = "aut"), person("Daniel", "Lee", role = "aut"), person("Michael", "Betancourt", role = "aut"), person("Marcus", "Brubaker", role = "aut"), person("Jiqiang", "Guo", role = "aut"), person("Peter", "Li", role = "aut"), person("Allen", "Riddell", role = "aut"), person("Marco", "Inacio", role = "aut"), person("Mitzi", "Morris", role = "aut"), person("Jeffrey", "Arnold", role = "aut"), person("Rob", "Goedman", role = "aut"), person("Brian", "Lau", role = "aut"), person("Rob", "Trangucci", role = "aut"), person("Jonah", "Gabry", role = "aut"), person("Alp", "Kucukelbir", role = "aut"), person("Robert", "Grant", role = "aut"), person("Dustin", "Tran", role = "aut"), person("Michael", "Malecki", role = "aut"), person("Yuanjun", "Gao", role = "aut"), person("Trustees of", "Columbia University", role = "cph"), person("Lawrence Livermore", "National Security", role = "cph", comment = "CVODES"), person("The Regents of the", "University of California", role = "cph", comment = "CVODES"), person("Southern Methodist", "University", role = "cph", comment = "CVODES"))
# URL: http://mc-stan.org/
# Description: The C++ header files of the Stan project are provided by this package, but it contains little R code or documentation. The main reference is the vignette. There is a shared object containing part of the 'CVODES' library, but its functionality is not accessible from R. 'StanHeaders' is only useful for developers who want to utilize the 'LinkingTo' directive of their package's DESCRIPTION file to build on the Stan library without incurring unnecessary dependencies. The Stan project develops a probabilistic programming language that implements full or approximate Bayesian statistical inference via Markov Chain Monte Carlo or 'variational' methods and implements (optionally penalized) maximum likelihood estimation via optimization. The Stan library includes an advanced automatic differentiation scheme, 'templated' statistical and linear algebra functions that can handle the automatically 'differentiable' scalar types (and doubles, 'ints', etc.), and a parser for the Stan language. The 'rstan' package provides user-facing R functions to parse, compile, test, estimate, and analyze Stan models.
# Suggests: Rcpp, BH, knitr (>= 1.15.1), rmarkdown, Matrix, methods, rstan, RcppParallel
# LinkingTo: RcppEigen
# VignetteBuilder: knitr
# SystemRequirements: pandoc
# Depends: R (>= 3.4.0)
# Version: 2.21.0-1
# License: BSD_3_clause + file LICENSE
# NeedsCompilation: yes
# Packaged: 2020-01-11 06:57:21 UTC; ben
# Author: Ben Goodrich [cre, aut], Joshua Pritikin [ctb], Andrew Gelman [aut], Bob Carpenter [aut], Matt Hoffman [aut], Daniel Lee [aut], Michael Betancourt [aut], Marcus Brubaker [aut], Jiqiang Guo [aut], Peter Li [aut], Allen Riddell [aut], Marco Inacio [aut], Mitzi Morris [aut], Jeffrey Arnold [aut], Rob Goedman [aut], Brian Lau [aut], Rob Trangucci [aut], Jonah Gabry [aut], Alp Kucukelbir [aut], Robert Grant [aut], Dustin Tran [aut], Michael Malecki [aut], Yuanjun Gao [aut], Trustees of Columbia University [cph], Lawrence Livermore National Security [cph] (CVODES), The Regents of the University of California [cph] (CVODES), Southern Methodist University [cph] (CVODES)
# Maintainer: Ben Goodrich <benjamin.goodrich@columbia.edu>
# Repository: CRAN
# Date/Publication: 2020-01-19 18:00:02 UTC
schema_version: 1

context:
  version: 2.32.6
  posix: "'m2-' if win else ''"
  native: "'m2w64-' if win else ''"

package:
  name: r-stanheaders
  version: ${{ version|replace("-", "_") }}

source:
  url:
    - ${{ cran_mirror }}/src/contrib/StanHeaders_${{ version }}.tar.gz
    - ${{ cran_mirror }}/src/contrib/Archive/StanHeaders/StanHeaders_${{ version }}.tar.gz
  sha256: 898061f5b36c9e68cf5d8f1129a52534bc8b26b515e5dd247140de5820cbe1a2

build:
  number: 0
  merge_build_and_host_envs: ${{ true if win }}
  dynamic_linking:
    rpaths:
      - lib/R/lib/
      - lib/

requirements:
  build:
    - if: build_platform != target_platform
      then: cross-r-base ${{ r_base }}
    - if: build_platform != target_platform
      then: r-rcppparallel
    - if: build_platform != target_platform
      then: r-rcppeigen
    - if: not win
      then: ${{ compiler('c') }}
    - if: win
      then: ${{ compiler('m2w64_c') }}
    - if: not win
      then: ${{ compiler('cxx') }}
    - if: win
      then: ${{ compiler('m2w64_cxx') }}
    - if: not win
      then: ${{ compiler('fortran') }}
    - if: win
      then: ${{ compiler('m2w64_fortran') }}
    - if: win
      then: ${{ posix }}filesystem
    - ${{ posix }}make
    - if: win
      then: ${{ posix }}sed
    - if: win
      then: ${{ posix }}coreutils
    - if: win
      then: ${{ posix }}zip
  host:
    - r-base=4.2
    - r-rcppeigen
    - r-rcppparallel
  run:
    - r-base>=4.2
    - if: win
      then: ${{ native }}gcc-libs
    - r-rcppeigen
    - r-rcppparallel

tests:
  - script:
      - if: not win
        then: "$R -e \"library('StanHeaders')\""
      - if: win
        then: "\"%R%\" -e \"library('StanHeaders')\""

about:
  license: BSD-3-Clause
  summary: |
    The C++ header files of the Stan project are provided by this package, but it contains little R code or documentation. The main reference is the vignette. There is a shared object containing part of the 'CVODES' library, but its functionality is not accessible from R. 'StanHeaders' is only useful for developers
    who want to utilize the 'LinkingTo' directive of their package's DESCRIPTION file to build on the Stan library without incurring unnecessary dependencies. The Stan project develops a probabilistic programming language that implements full or approximate Bayesian statistical inference via Markov Chain Monte Carlo or 'variational'
    methods and implements (optionally penalized) maximum likelihood estimation via optimization. The Stan library includes an advanced automatic differentiation scheme, 'templated' statistical and linear algebra functions that can handle the automatically 'differentiable' scalar types (and doubles, 'ints', etc.), and a
    parser for the Stan language. The 'rstan' package provides user-facing R functions to parse, compile, test, estimate, and analyze Stan models.
  license_file:
    - ${{ env.get("PREFIX") }}/lib/R/share/licenses/BSD_3_clause
    - LICENSE
  homepage: http://mc-stan.org/

extra:
  recipe-maintainers:
    - conda-forge/r
    - croth1
    - mdehollander

