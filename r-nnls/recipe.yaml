schema_version: 1

context:
  version: 1.5
  posix: "'m2-' if win else ''"
  native: "'m2w64-' if win else ''"

package:
  name: r-nnls
  version: ${{ version|replace("-", "_") }}

source:
  url:
    - ${{ cran_mirror }}/src/contrib/nnls_${{ version }}.tar.gz
    - ${{ cran_mirror }}/src/contrib/Archive/nnls/nnls_${{ version }}.tar.gz
  sha256: cd70feb286f86f6dead75da693a8f67c9bd3b91eb738e6e6ac659e3b8c7a3452
  file_name: nnls_${{ version }}.tar.gz

build:
  number: 0
  merge_build_and_host_envs: ${{ true if win }}
  dynamic_linking:
    rpaths:
      - lib/R/lib/
      - lib/

requirements:
  build:
    - if: not win
      then: ${{ compiler('c') }}
    - if: not win
      then: ${{ compiler('fortran') }}
    - if: win
      then: ${{ compiler('m2w64_c') }}
    - if: win
      then: ${{ compiler('m2w64_fortran') }}
    - if: win
      then: ${{ posix }}filesystem
    - ${{ posix }}make
    - if: win
      then: ${{ posix }}sed
    - if: win
      then: ${{ posix }}coreutils
    - if: win
      then: ${{ posix }}zip
  host:
    - r-base=4.2
  run:
    - r-base>=4.2
    - if: win
      then: ${{ native }}gcc-libs

tests:
  - script:
      - if: not win
        then: "$R -e \"library('nnls')\""
      - if: win
        then: "\"%R%\" -e \"library('nnls')\""

about:
  license: GPL-2.0-or-later
  summary: An R interface to the Lawson-Hanson implementation of an algorithm for non-negative least squares (NNLS).  Also allows the combination of non-negative and non-positive constraints.
  license_file: ${{ env.get("PREFIX") }}/lib/R/share/licenses/GPL-2
  homepage: https://CRAN.R-project.org/package=nnls

extra:
  recipe-maintainers:
    - conda-forge/r
    - MathiasHaudgaard
    - FrodePedersen
    - ArneKr

