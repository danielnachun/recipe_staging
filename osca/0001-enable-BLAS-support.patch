From 14502f1fb01d31151505d447c0308d1b42d8092b Mon Sep 17 00:00:00 2001
From: danielnachun <daniel.nachun@gmail.com>
Date: Thu, 7 Mar 2024 10:05:00 -0800
Subject: [PATCH] enable BLAS support

---
 CMakeLists.txt | 94 ++++++++++++++++++++++++++++++++++++++------------
 1 file changed, 72 insertions(+), 22 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 87c7a80..cd07bf2 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -124,27 +124,52 @@ else()
 endif()
 
 
-#detect intel MKL
-set(mkl_path FALSE CACHE PATH "intel MKL package location")
-set(mkl_include_path CACHE PATH "")
-set(mkl_lib_path CACHE PATH "")
-if (mkl_path)
-    message(STATUS "You set mkl path to: " ${mkl_path})
-    set(mkl_include_dir ${mkl_path}/include)
-    set(mkl_lib_dir ${mkl_path}/lib/intel64)
-elseif (mkl_include_path AND mkl_lib_path)
-    message(STATUS "You set mkl_includt_path to: " ${mkl_include_path})
-    message(STATUS "You set mkl_lib_path to: " ${mkl_lib_path})
-    set(mkl_include_dir ${mkl_include_path})
-    set(mkl_lib_dir ${mkl_lib_path}/intel64)
-else ()
-    find_path(mkl_include_dir mkl.h ${CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES} ${CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES})
-    find_library(mkl_lib_dir mkl_core ${CMAKE_C_IMPLICIT_LINK_DIRECTORIES} ${CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES})
-    if (mkl_include_dir AND mkl_lib_dir)
-        get_filename_component(mkl_lib_dir ${mkl_lib_dir} DIRECTORY)
-        message("Find mkl head file and ")
-    else()
-        message(FATAL_ERROR "Can not find mkl head files and libs, please specific them by -Dmkl_path or -Dmkl_include_path and -Dmkl_lib_path to specific them.")
+if (CMAKE_HOST_SYSTEM_PROCESSOR STREQUAL "x86_64")
+    #detect intel MKL
+    set(mkl_path FALSE CACHE PATH "intel MKL package location")
+    set(mkl_include_path CACHE PATH "")
+    set(mkl_lib_path CACHE PATH "")
+    if (mkl_path)
+        message(STATUS "You set mkl path to: " ${mkl_path})
+        set(mkl_include_dir ${mkl_path}/include)
+        set(mkl_lib_dir ${mkl_path}/lib/intel64)
+    elseif (mkl_include_path AND mkl_lib_path)
+        message(STATUS "You set mkl_includt_path to: " ${mkl_include_path})
+        message(STATUS "You set mkl_lib_path to: " ${mkl_lib_path})
+        set(mkl_include_dir ${mkl_include_path})
+        set(mkl_lib_dir ${mkl_lib_path}/intel64)
+    else ()
+        find_path(mkl_include_dir mkl.h ${CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES} ${CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES})
+        find_library(mkl_lib_dir mkl_core ${CMAKE_C_IMPLICIT_LINK_DIRECTORIES} ${CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES})
+        if (mkl_include_dir AND mkl_lib_dir)
+            get_filename_component(mkl_lib_dir ${mkl_lib_dir} DIRECTORY)
+            message("Find mkl head file and ")
+        else()
+            message(FATAL_ERROR "Can not find mkl head files and libs, please specific them by -Dmkl_path or -Dmkl_include_path and -Dmkl_lib_path to specific them.")
+        endif()
+    endif()
+else()
+    set(blas_path FALSE CACHE PATH "BLAS package location")
+    set(blas_include_path CACHE PATH "")
+    set(blas_lib_path CACHE PATH "")
+    if (blas_path)
+        message(STATUS "You set blas path to: " ${blas_path})
+        set(blas_include_dir ${blas_path}/include)
+        set(blas_lib_dir ${blas_path}/lib)
+    elseif (blas_include_path AND blas_lib_path)
+        message(STATUS "You set blas_include_path to: " ${blas_include_path})
+        message(STATUS "You set blas_lib_path to: " ${blas_lib_path})
+        set(blas_include_dir ${blas_include_path})
+        set(blas_lib_dir ${blas_lib_path})
+    else ()
+        find_path(blas_include_dir cblas.h ${CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES} ${CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES})
+        find_library(blas_lib_dir blas ${CMAKE_C_IMPLICIT_LINK_DIRECTORIES} ${CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES})
+        if (blas_include_dir AND blas_lib_dir)
+            get_filename_component(blas_lib_dir ${blas_lib_dir} DIRECTORY)
+            message("Find blas head file and ")
+        else()
+            message(FATAL_ERROR "Can not find BLAS header files and libs, please specific them by -Dblas_path or -Dblas_include_path and -Dblas_lib_path to specific them.")
+        endif()
     endif()
 endif()
 
@@ -219,7 +244,32 @@ if (CMAKE_HOST_SYSTEM_PROCESSOR STREQUAL "x86_64")
         message(FATAL_ERROR "OS not recgnized.")
     endif()
 else()
-    message(STATUS "Until now, only x86_64 architecture was tested.")
+    if (system STREQUAL "UNIX-like")
+        if (CMAKE_C_COMPILER_ID STREQUAL "GNU")
+            target_compile_options(osca PRIVATE "-fopenmp")
+            target_include_directories(osca PRIVATE ${zlib_include_dir} PRIVATE ${gsl_include_dir} PRIVATE ${eigen_dir} PRIVATE  ${blas_include_dir} PRIVATE ${rmath_lib_dir})
+            target_link_directories(osca PRIVATE ${zlib_lib_dir} PRIVATE ${gsl_lib_dir} PRIVATE ${blas_lib_dir} PRIVATE  ${rmath_lib_dir})
+            if (NOT BUILD_STATIC)
+                target_link_libraries(osca z -Wl,--start-group blas lapack -Wl,--end-group gomp pthread Rmath gsl gslcblas m)
+            else()
+                message(WARNING "You now try to link libs staticlly, You need make sure all static lib was installed.")
+                target_link_libraries(osca -static z -Wl,--start-group blas lapack -Wl,--end-group gomp pthread Rmath gsl gslcblas m)
+            endif()
+        elseif (CMAKE_C_COMPILER_ID STREQUAL "Clang")
+            target_include_directories(osca PRIVATE ${zlib_include_dir} PRIVATE ${gsl_include_dir} PRIVATE ${eigen_dir} PRIVATE  ${blas_include_dir} PRIVATE ${rmath_lib_dir})
+            target_link_directories(osca PRIVATE ${zlib_lib_dir} PRIVATE ${gsl_lib_dir} PRIVATE ${blas_lib_dir} PRIVATE  ${rmath_lib_dir})
+            if (NOT BUILD_STATIC)
+                target_link_libraries(osca z blas lapack omp pthread Rmath gsl gslcblas m)
+            else()
+                message(WARNING "You now try to link libs staticlly, You need make sure all static lib was installed.")
+                target_link_libraries(osca -Wl,-Bstatic z -Wl,--start-group blas lapack -Wl,--end-group gomp pthread Rmath gsl gslcblas -Wl,-Bdynamic)
+            endif()
+        endif()
+    elseif (system STREQUAL "macOS")
+    elseif (system STREQUAL "windows")
+    else()
+        message(FATAL_ERROR "OS not recgnized.")
+    endif()
 endif()
 
 
-- 
2.43.0

