diff --git a/lib/Language/Haskell/Stylish/Printer.hs b/lib/Language/Haskell/Stylish/Printer.hs
index 4d6970e2..08c30c98 100644
--- a/lib/Language/Haskell/Stylish/Printer.hs
+++ b/lib/Language/Haskell/Stylish/Printer.hs
@@ -239,7 +239,7 @@ putType ltp = case GHC.unLoc ltp of
     putOutputable ltp
   GHC.HsQualTy {} ->
     putOutputable ltp
-  GHC.HsAppKindTy _ _ _ ->
+  GHC.HsAppKindTy _ _ _ _ ->
     putOutputable ltp
   GHC.HsListTy _ _ ->
     putOutputable ltp
diff --git a/lib/Language/Haskell/Stylish/Step/Data.hs b/lib/Language/Haskell/Stylish/Step/Data.hs
index fd18d4da..0a99b0aa 100644
--- a/lib/Language/Haskell/Stylish/Step/Data.hs
+++ b/lib/Language/Haskell/Stylish/Step/Data.hs
@@ -313,10 +313,10 @@ putName decl@MkDataDecl{..} =
     maybePutKindSig
 
   where
-    firstTvar :: Maybe (GHC.LHsTyVarBndr () GHC.GhcPs)
+    firstTvar :: Maybe (GHC.LHsTyVarBndr (GHC.HsBndrVis GHC.GhcPs) GHC.GhcPs)
     firstTvar = listToMaybe $ GHC.hsq_explicit dataTypeVars
 
-    secondTvar :: Maybe (GHC.LHsTyVarBndr () GHC.GhcPs)
+    secondTvar :: Maybe (GHC.LHsTyVarBndr (GHC.HsBndrVis GHC.GhcPs) GHC.GhcPs)
     secondTvar = listToMaybe . drop 1 $ GHC.hsq_explicit dataTypeVars
 
     maybePutKindSig :: Printer ()
diff --git a/lib/Language/Haskell/Stylish/Step/Imports.hs b/lib/Language/Haskell/Stylish/Step/Imports.hs
index 3ec67eea..fc69b2f7 100644
--- a/lib/Language/Haskell/Stylish/Step/Imports.hs
+++ b/lib/Language/Haskell/Stylish/Step/Imports.hs
@@ -594,8 +594,8 @@ importModuleNameLength imp =
 --------------------------------------------------------------------------------
 stringLiteral :: GHC.StringLiteral -> String
 stringLiteral sl = case GHC.sl_st sl of
-    GHC.NoSourceText -> show . GHC.unpackFS $ GHC.sl_fs sl
-    GHC.SourceText s -> s
+    GHC.NoSourceText -> GHC.unpackFS $ GHC.sl_fs sl
+    GHC.SourceText s -> GHC.unpackFS $ s
 
 
 --------------------------------------------------------------------------------
